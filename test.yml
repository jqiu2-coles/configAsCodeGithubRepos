parameters:
  - name: REPO_OWNER_REPO_NAME
    type: string
    default: "Coles-Store-Team-Platform/kleene-cli"

jobs:
  - job: Container
    pool: 'Coles-Private-Hosted-Store-Team-NonProd-Scalable'
    #container: cached-images.azr.cmltd.net.au/powershell-pipeline:latest
    steps:
      - checkout: self
        fetchDepth: 1
        persistCredentials: true

      - task: Bash@3
        displayName: Generate repo's branch protection rules json files 
        #condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        env:
          GITHUB_PAT: $(GITHUB_PAT)
        inputs:
          targetType: 'inline'
          script: |
            # get repo owner name and repo name
            IFS=/
            REPO_OWNER_REPO_NAME=${{ parameters.REPO_OWNER_REPO_NAME }}
            set $REPO_OWNER_REPO_NAME
            REPO_OWNER=$1
            REPO_NAME=$2
            unset IFS
            
            # list all branches for the repo
            page=1; while branches=$(curl -s -H "Authorization: Bearer $(GITHUB_PAT)" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/branches?per_page=100&page=$page" | jq -r '.[].name' 2>/dev/null) && [ -n "$branches" ]; do echo "$branches"; page=$((page+1)); done | sort -u
            echo "all branches:"
            printf '%s\n' "${branches[@]}"
            
            
            for branch_name in "${branches[@]}"; do
              encoded_branch=$(printf %s ${branch_name} | jq -sRr @uri)
              echo "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/branches/${encoded_branch}/protection"
              # get branch protection rules json
              curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $(GITHUB_PAT)" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/branches/${encoded_branch}/protection 
            done